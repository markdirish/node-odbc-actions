name: Create Release

on: push

jobs:
  build-windows:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Upgrade NPM
      run: npm install -g npm
    - run: npm install -g node-gyp
    - run: npm ci --production
    - run: ./node_modules/.bin/node-pre-gyp rebuild --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries
        path: build/stage/*.tar.gz

  build-macos:

    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Upgrade NPM
      run: npm install -g npm
    - run: npm install -g node-gyp
    - run: npm ci --production
    - run: ./node_modules/.bin/node-pre-gyp rebuild --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-binaries
        path: build/stage/*.tar.gz

  build-linux:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Upgrade NPM
      run: npm install -g npm
    - run: npm install -g node-gyp
    - run: npm ci --production
    - run: ./node_modules/.bin/node-pre-gyp rebuild --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: build/stage/*.tar.gz

  create-release:

    runs-on: ubuntu-latest

    needs: [build-windows, build-macos, build-linux]

    steps:

    - uses: actions/checkout@v2

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master

    - name: Create Release 
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.current-version }}
        release_name: ${{ steps.package-version.outputs.current-version }}
        draft: true
        prerelease: false

    # Download all of the various binaries that were created
    - uses: actions/download-artifact@v3

    # Upload the various binaries
    - name: debug
      run: ls -la ./*-binaries/*.tar.gz

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./*-binaries/*.tar.gz

    # - name: Upload odbc-v${{ steps.package-version.outputs.current-version }} prebuild binaries
    #   uses: alexellis/upload-assets@0.2.2
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     asset_paths: '["./*-binaries/*.tar.gz"]'
